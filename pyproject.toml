[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "cookiecutter-birdhouse"
dynamic = ["version"]
description = "Cookiecutter template for a PyWPS service"
authors = [
    { name = "Carsten Ehbrecht", email = "ehbrecht@dkrz.de" },
    { name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca" },
]
maintainers = [
    { name = "Carsten Ehbrecht", email = "ehbrecht@dkrz.de" },
    { name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca" },
]
license = { file = "LICENSE" }
keywords = ["cookiecutter", "template", "package", "wps", "pywps", "birdhouse"]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development"
]

[project.optional-dependencies]
dev = [
    "alabaster>=0.7.16",
    "cookiecutter>=2.6.0",
    "cruft",
    "cryptography",
    "psutil",
    "pytest>=8.0.0",
    "pytest-cookies>=0.7.0",
    "pyyaml",
    "ruff>=0.5.7",
    "sphinx>=7.0.0",
    "tox>=4.18.0",
    "watchdog>=4.0.0",
]

[project.urls]
Source = "https://github.com/bird-house/cookiecutter-birdhouse"
Documentation = "https://cookiecutter-birdhouse.readthedocs.io/en/latest/"

[tool.setuptools.packages.find]
include = [""]

[tool.setuptools_scm]

[tool.ruff]
exclude = [
  "*cookiecutter.project_slug*"
]

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest]
addopts = [
	"--strict",
	"--tb=native",
	"--verbose",
	"tests/",
    ]
markers = [
    "online: mark test to need internet connection",
    "slow: mark test to be slow",
    "requires_gdal: mark test as needing GDAL",
    ]
